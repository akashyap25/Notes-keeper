{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\KeepNotes\\\\client\\\\src\\\\components\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Footer from \"./footer\";\nimport Header from \"./header\";\nimport Notes from \"./Notes\";\nimport CreateArea from \"./CreateArea\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [notes, setNotes] = useState([{\n    key: \"\",\n    title: \"\",\n    content: \"\"\n  }]);\n  useEffect(() => {\n    fetch(\"http://localhost:5000/\").then(res => res.json()).then(jsonRes => setNotes(jsonRes));\n  }, []);\n  function addNote(newNote) {\n    setNotes(prevNotes => {\n      return [...prevNotes, newNote];\n    });\n  }\n  function deleteNote(id) {\n    setNotes(prevNotes => {\n      return prevNotes.filter((noteItem, index) => {\n        return index !== id;\n      });\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(CreateArea, {\n      onAdd: addNote\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), notes.map((noteItem, index) => {\n      return /*#__PURE__*/_jsxDEV(Notes, {\n        id: index,\n        title: noteItem.title,\n        content: noteItem.content,\n        onDelete: deleteNote\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"t73l9o8GI0WpGbe9L5l3RpLXydg=\");\n_c = App;\nexport default App;\n\n//userdb\n\nrequire('dotenv').config();\nconst express = require(\"express\");\nconst bodyParser = require(\"body-parser\");\nconst ejs = require(\"ejs\");\nconst {\n  urlencoded\n} = require(\"express\");\nconst mongoose = require(\"mongoose\");\nconst session = require(\"express-session\");\nconst passport = require(\"passport\");\nconst passportLocalMongoose = require(\"passport-local-mongoose\");\nvar GoogleStrategy = require('passport-google-oauth20').Strategy;\nvar findOrCreate = require('mongoose-findorcreate');\nconst app = express();\napp.use(express.static(\"public\"));\napp.set('view engine', 'ejs');\napp.use(bodyParser.urlencoded({\n  extended: true\n}));\nmongoose.set('strictQuery', true);\napp.use(session({\n  secret: process.env.SECRET,\n  resave: false,\n  saveUninitialized: false\n}));\napp.use(passport.initialize());\napp.use(passport.session());\nmongoose.connect(\"mongodb://localhost:27017/userDB\", {\n  useNewUrlParser: true\n});\nconst userSchema = new mongoose.Schema({\n  name: String,\n  email: String,\n  password: String,\n  googleId: String\n});\nuserSchema.plugin(passportLocalMongoose);\nuserSchema.plugin(findOrCreate);\nconst User = new mongoose.model(\"User\", userSchema);\npassport.use(User.createStrategy());\npassport.serializeUser(function (user, cb) {\n  process.nextTick(function () {\n    return cb(null, {\n      id: user.id,\n      username: user.username,\n      picture: user.picture\n    });\n  });\n});\npassport.deserializeUser(function (user, cb) {\n  process.nextTick(function () {\n    return cb(null, user);\n  });\n});\npassport.use(new GoogleStrategy({\n  clientID: process.env.CLIENT_ID,\n  clientSecret: process.env.CLIENT_SECRET,\n  callbackURL: \"http://localhost:3000/auth/google/secrets\",\n  userProfileURL: \"https://www.googleapis.com/oauth2/v3/userinfo\"\n}, function (accessToken, refreshToken, profile, cb) {\n  console.log(profile);\n  User.findOrCreate({\n    googleId: profile.id\n  }, function (err, user) {\n    return cb(err, user);\n  });\n}));\napp.get(\"/\", function (req, res) {\n  res.render(\"home\");\n});\napp.get('/auth/google', passport.authenticate('google', {\n  scope: [\"profile\"]\n}));\napp.get('/auth/google/secrets', passport.authenticate('google', {\n  failureRedirect: '/login'\n}), function (req, res) {\n  // Successful authentication, redirect home.\n  res.redirect('/secrets');\n});\napp.get(\"/login\", function (req, res) {\n  res.render(\"login\");\n});\napp.get(\"/register\", function (req, res) {\n  res.render(\"register\");\n});\napp.get(\"/secrets\", function (req, res) {\n  if (req.isAuthenticated()) {\n    res.render(\"secrets\");\n  } else {\n    res.redirect(\"/login\");\n  }\n});\napp.get(\"/logout\", function (req, res) {\n  req.logout(function (err) {\n    if (err) {\n      console.log(err);\n    } else {\n      res.redirect(\"/\");\n    }\n  });\n});\napp.post(\"/register\", function (req, res) {\n  User.register({\n    username: req.body.username\n  }, req.body.password, function (err, user) {\n    if (err) {\n      console.log(err);\n      res.redirect(\"/register\");\n    } else {\n      passport.authenticate(\"local\")(req, res, function () {\n        res.redirect(\"/secrets\");\n      });\n    }\n  });\n});\napp.post(\"/login\", function (req, res) {\n  const user = new User({\n    username: req.body.username,\n    password: req.body.password\n  });\n  req.login(user, function (err) {\n    if (err) {\n      console.log(err);\n    } else {\n      passport.authenticate(\"local\")(req, res, function () {\n        res.redirect(\"/secrets\");\n      });\n    }\n  });\n});\napp.listen(3000, function () {\n  console.log(\"server running on port 3000\");\n});\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Footer","Header","Notes","CreateArea","App","notes","setNotes","key","title","content","fetch","then","res","json","jsonRes","addNote","newNote","prevNotes","deleteNote","id","filter","noteItem","index","map","require","config","express","bodyParser","ejs","urlencoded","mongoose","session","passport","passportLocalMongoose","GoogleStrategy","Strategy","findOrCreate","app","use","static","set","extended","secret","process","env","SECRET","resave","saveUninitialized","initialize","connect","useNewUrlParser","userSchema","Schema","name","String","email","password","googleId","plugin","User","model","createStrategy","serializeUser","user","cb","nextTick","username","picture","deserializeUser","clientID","CLIENT_ID","clientSecret","CLIENT_SECRET","callbackURL","userProfileURL","accessToken","refreshToken","profile","console","log","err","get","req","render","authenticate","scope","failureRedirect","redirect","isAuthenticated","logout","post","register","body","login","listen"],"sources":["C:/Users/Lenovo/Desktop/KeepNotes/client/src/components/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Footer from \"./footer\";\r\nimport Header from \"./header\";\r\nimport Notes from \"./Notes\";\r\nimport CreateArea from \"./CreateArea\";\r\n\r\nfunction App() {\r\n  const [notes, setNotes] = useState([\r\n    {\r\n      key: \"\",\r\n      title: \"\",\r\n      content: \"\",\r\n    },\r\n  ]);\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:5000/\")\r\n      .then((res) => res.json())\r\n      .then((jsonRes) => setNotes(jsonRes));\r\n  }, []);\r\n\r\n  function addNote(newNote) {\r\n    setNotes((prevNotes) => {\r\n      return [...prevNotes, newNote];\r\n    });\r\n  }\r\n  function deleteNote(id) {\r\n    setNotes(prevNotes => {\r\n      return prevNotes.filter((noteItem, index) => {\r\n        return index !== id;\r\n      });\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n        <Header />\r\n      <CreateArea onAdd={addNote} />\r\n      {notes.map((noteItem, index) => {\r\n        return (\r\n          <Notes\r\n            key={index}\r\n            id={index}\r\n            title={noteItem.title}\r\n            content={noteItem.content}\r\n            onDelete={deleteNote}\r\n          />\r\n        );\r\n      })}\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n//userdb\r\n\r\nrequire('dotenv').config();\r\nconst express= require (\"express\");\r\nconst bodyParser= require(\"body-parser\");\r\nconst ejs= require(\"ejs\");\r\nconst { urlencoded } = require(\"express\");\r\nconst mongoose = require(\"mongoose\");\r\nconst session = require(\"express-session\");\r\nconst passport = require(\"passport\");\r\nconst passportLocalMongoose = require(\"passport-local-mongoose\");\r\nvar GoogleStrategy = require('passport-google-oauth20').Strategy;\r\nvar findOrCreate = require('mongoose-findorcreate');\r\nconst app= express();\r\n\r\napp.use(express.static(\"public\"));\r\napp.set('view engine', 'ejs');\r\napp.use(bodyParser.urlencoded({\r\n    extended:true\r\n}));\r\n\r\nmongoose.set('strictQuery', true);\r\n\r\n\r\napp.use(session({\r\n    secret: process.env.SECRET,\r\n    resave:false,\r\n    saveUninitialized:false\r\n}));\r\n\r\napp.use(passport.initialize());\r\napp.use(passport.session());\r\n\r\n\r\nmongoose.connect(\"mongodb://localhost:27017/userDB\", {useNewUrlParser: true});\r\n\r\nconst userSchema = new mongoose.Schema({\r\n    name:String,\r\n    email:String,\r\n    password:String,\r\n    googleId: String\r\n});\r\n\r\nuserSchema.plugin(passportLocalMongoose);\r\nuserSchema.plugin(findOrCreate);\r\n\r\n\r\n\r\n\r\nconst User= new mongoose.model(\"User\", userSchema);\r\n\r\npassport.use(User.createStrategy());\r\n\r\npassport.serializeUser(function(user, cb) {\r\n  process.nextTick(function() {\r\n    return cb(null, {\r\n      id: user.id,\r\n      username: user.username,\r\n      picture: user.picture\r\n    });\r\n  });\r\n});\r\n\r\npassport.deserializeUser(function(user, cb) {\r\n  process.nextTick(function() {\r\n    return cb(null, user);\r\n  });\r\n});\r\n\r\npassport.use(new GoogleStrategy({\r\n  clientID: process.env.CLIENT_ID,\r\n  clientSecret: process.env.CLIENT_SECRET,\r\n  callbackURL: \"http://localhost:3000/auth/google/secrets\",\r\n  userProfileURL:\"https://www.googleapis.com/oauth2/v3/userinfo\"\r\n},\r\nfunction(accessToken, refreshToken, profile, cb) {\r\n  console.log(profile);\r\n\r\n  User.findOrCreate({ googleId: profile.id }, function (err, user) {\r\n    return cb(err, user);\r\n  });\r\n}\r\n));\r\n\r\n\r\napp.get(\"/\", function(req,res){\r\n  res.render(\"home\");\r\n});\r\n\r\napp.get('/auth/google',\r\n  passport.authenticate('google', { scope: [\"profile\"] }));\r\n\r\n  app.get('/auth/google/secrets',\r\n  passport.authenticate('google', { failureRedirect: '/login' }),\r\n  function(req, res) {\r\n    // Successful authentication, redirect home.\r\n    res.redirect('/secrets');\r\n  });\r\n\r\napp.get(\"/login\", function(req,res){\r\n    res.render(\"login\");\r\n  });\r\n\r\n  app.get(\"/register\", function(req,res){\r\n    res.render(\"register\");\r\n  });\r\n\r\n  app.get(\"/secrets\", function(req,res){\r\n    if (req.isAuthenticated()){\r\n      res.render(\"secrets\");\r\n    } else {\r\n      res.redirect(\"/login\");\r\n    }\r\n  });\r\n\r\n  app.get(\"/logout\", function(req,res){\r\n    req.logout(function(err){\r\n      if(err){\r\n        console.log(err);\r\n      } else {\r\n        res.redirect(\"/\");\r\n      }\r\n    });\r\n     \r\n  });\r\n\r\n  app.post(\"/register\", function(req,res){\r\n\r\n    User.register({username:req.body.username}, req.body.password, function(err,user){\r\n       if(err){\r\n        console.log(err);\r\n        res.redirect(\"/register\");\r\n       } else {\r\n        passport.authenticate(\"local\")(req,res, function(){\r\n            res.redirect(\"/secrets\");\r\n        });\r\n       }\r\n    });\r\n   \r\n  });\r\n\r\n\r\n  app.post(\"/login\", function(req,res){\r\n    \r\n    const user= new User({\r\n     username: req.body.username,\r\n      password: req.body.password\r\n    });\r\n\r\n    req.login(user, function(err,){\r\n       if(err){\r\n        console.log(err);\r\n       } else {\r\n        passport.authenticate(\"local\")(req, res, function(){\r\n          res.redirect(\"/secrets\");\r\n        })\r\n       }\r\n    });\r\n                \r\n  });\r\n\r\n\r\n\r\napp.listen(3000, function(){\r\nconsole.log(\"server running on port 3000\");\r\n});"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,UAAU,MAAM,cAAc;AAAC;AAEtC,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,CACjC;IACES,GAAG,EAAE,EAAE;IACPC,KAAK,EAAE,EAAE;IACTC,OAAO,EAAE;EACX,CAAC,CACF,CAAC;EACFV,SAAS,CAAC,MAAM;IACdW,KAAK,CAAC,wBAAwB,CAAC,CAC5BC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,EAAE,CAAC,CACzBF,IAAI,CAAEG,OAAO,IAAKR,QAAQ,CAACQ,OAAO,CAAC,CAAC;EACzC,CAAC,EAAE,EAAE,CAAC;EAEN,SAASC,OAAO,CAACC,OAAO,EAAE;IACxBV,QAAQ,CAAEW,SAAS,IAAK;MACtB,OAAO,CAAC,GAAGA,SAAS,EAAED,OAAO,CAAC;IAChC,CAAC,CAAC;EACJ;EACA,SAASE,UAAU,CAACC,EAAE,EAAE;IACtBb,QAAQ,CAACW,SAAS,IAAI;MACpB,OAAOA,SAAS,CAACG,MAAM,CAAC,CAACC,QAAQ,EAAEC,KAAK,KAAK;QAC3C,OAAOA,KAAK,KAAKH,EAAE;MACrB,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;EAEA,oBACE;IAAA,wBACI,QAAC,MAAM;MAAA;MAAA;MAAA;IAAA,QAAG,eACZ,QAAC,UAAU;MAAC,KAAK,EAAEJ;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAG,EAC7BV,KAAK,CAACkB,GAAG,CAAC,CAACF,QAAQ,EAAEC,KAAK,KAAK;MAC9B,oBACE,QAAC,KAAK;QAEJ,EAAE,EAAEA,KAAM;QACV,KAAK,EAAED,QAAQ,CAACb,KAAM;QACtB,OAAO,EAAEa,QAAQ,CAACZ,OAAQ;QAC1B,QAAQ,EAAES;MAAW,GAJhBI,KAAK;QAAA;QAAA;QAAA;MAAA,QAKV;IAEN,CAAC,CAAC,eACF,QAAC,MAAM;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QACN;AAEV;AAAC,GA7CQlB,GAAG;AAAA,KAAHA,GAAG;AA+CZ,eAAeA,GAAG;;AAGlB;;AAEAoB,OAAO,CAAC,QAAQ,CAAC,CAACC,MAAM,EAAE;AAC1B,MAAMC,OAAO,GAAEF,OAAO,CAAE,SAAS,CAAC;AAClC,MAAMG,UAAU,GAAEH,OAAO,CAAC,aAAa,CAAC;AACxC,MAAMI,GAAG,GAAEJ,OAAO,CAAC,KAAK,CAAC;AACzB,MAAM;EAAEK;AAAW,CAAC,GAAGL,OAAO,CAAC,SAAS,CAAC;AACzC,MAAMM,QAAQ,GAAGN,OAAO,CAAC,UAAU,CAAC;AACpC,MAAMO,OAAO,GAAGP,OAAO,CAAC,iBAAiB,CAAC;AAC1C,MAAMQ,QAAQ,GAAGR,OAAO,CAAC,UAAU,CAAC;AACpC,MAAMS,qBAAqB,GAAGT,OAAO,CAAC,yBAAyB,CAAC;AAChE,IAAIU,cAAc,GAAGV,OAAO,CAAC,yBAAyB,CAAC,CAACW,QAAQ;AAChE,IAAIC,YAAY,GAAGZ,OAAO,CAAC,uBAAuB,CAAC;AACnD,MAAMa,GAAG,GAAEX,OAAO,EAAE;AAEpBW,GAAG,CAACC,GAAG,CAACZ,OAAO,CAACa,MAAM,CAAC,QAAQ,CAAC,CAAC;AACjCF,GAAG,CAACG,GAAG,CAAC,aAAa,EAAE,KAAK,CAAC;AAC7BH,GAAG,CAACC,GAAG,CAACX,UAAU,CAACE,UAAU,CAAC;EAC1BY,QAAQ,EAAC;AACb,CAAC,CAAC,CAAC;AAEHX,QAAQ,CAACU,GAAG,CAAC,aAAa,EAAE,IAAI,CAAC;AAGjCH,GAAG,CAACC,GAAG,CAACP,OAAO,CAAC;EACZW,MAAM,EAAEC,OAAO,CAACC,GAAG,CAACC,MAAM;EAC1BC,MAAM,EAAC,KAAK;EACZC,iBAAiB,EAAC;AACtB,CAAC,CAAC,CAAC;AAEHV,GAAG,CAACC,GAAG,CAACN,QAAQ,CAACgB,UAAU,EAAE,CAAC;AAC9BX,GAAG,CAACC,GAAG,CAACN,QAAQ,CAACD,OAAO,EAAE,CAAC;AAG3BD,QAAQ,CAACmB,OAAO,CAAC,kCAAkC,EAAE;EAACC,eAAe,EAAE;AAAI,CAAC,CAAC;AAE7E,MAAMC,UAAU,GAAG,IAAIrB,QAAQ,CAACsB,MAAM,CAAC;EACnCC,IAAI,EAACC,MAAM;EACXC,KAAK,EAACD,MAAM;EACZE,QAAQ,EAACF,MAAM;EACfG,QAAQ,EAAEH;AACd,CAAC,CAAC;AAEFH,UAAU,CAACO,MAAM,CAACzB,qBAAqB,CAAC;AACxCkB,UAAU,CAACO,MAAM,CAACtB,YAAY,CAAC;AAK/B,MAAMuB,IAAI,GAAE,IAAI7B,QAAQ,CAAC8B,KAAK,CAAC,MAAM,EAAET,UAAU,CAAC;AAElDnB,QAAQ,CAACM,GAAG,CAACqB,IAAI,CAACE,cAAc,EAAE,CAAC;AAEnC7B,QAAQ,CAAC8B,aAAa,CAAC,UAASC,IAAI,EAAEC,EAAE,EAAE;EACxCrB,OAAO,CAACsB,QAAQ,CAAC,YAAW;IAC1B,OAAOD,EAAE,CAAC,IAAI,EAAE;MACd7C,EAAE,EAAE4C,IAAI,CAAC5C,EAAE;MACX+C,QAAQ,EAAEH,IAAI,CAACG,QAAQ;MACvBC,OAAO,EAAEJ,IAAI,CAACI;IAChB,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC,CAAC;AAEFnC,QAAQ,CAACoC,eAAe,CAAC,UAASL,IAAI,EAAEC,EAAE,EAAE;EAC1CrB,OAAO,CAACsB,QAAQ,CAAC,YAAW;IAC1B,OAAOD,EAAE,CAAC,IAAI,EAAED,IAAI,CAAC;EACvB,CAAC,CAAC;AACJ,CAAC,CAAC;AAEF/B,QAAQ,CAACM,GAAG,CAAC,IAAIJ,cAAc,CAAC;EAC9BmC,QAAQ,EAAE1B,OAAO,CAACC,GAAG,CAAC0B,SAAS;EAC/BC,YAAY,EAAE5B,OAAO,CAACC,GAAG,CAAC4B,aAAa;EACvCC,WAAW,EAAE,2CAA2C;EACxDC,cAAc,EAAC;AACjB,CAAC,EACD,UAASC,WAAW,EAAEC,YAAY,EAAEC,OAAO,EAAEb,EAAE,EAAE;EAC/Cc,OAAO,CAACC,GAAG,CAACF,OAAO,CAAC;EAEpBlB,IAAI,CAACvB,YAAY,CAAC;IAAEqB,QAAQ,EAAEoB,OAAO,CAAC1D;EAAG,CAAC,EAAE,UAAU6D,GAAG,EAAEjB,IAAI,EAAE;IAC/D,OAAOC,EAAE,CAACgB,GAAG,EAAEjB,IAAI,CAAC;EACtB,CAAC,CAAC;AACJ,CAAC,CACA,CAAC;AAGF1B,GAAG,CAAC4C,GAAG,CAAC,GAAG,EAAE,UAASC,GAAG,EAACtE,GAAG,EAAC;EAC5BA,GAAG,CAACuE,MAAM,CAAC,MAAM,CAAC;AACpB,CAAC,CAAC;AAEF9C,GAAG,CAAC4C,GAAG,CAAC,cAAc,EACpBjD,QAAQ,CAACoD,YAAY,CAAC,QAAQ,EAAE;EAAEC,KAAK,EAAE,CAAC,SAAS;AAAE,CAAC,CAAC,CAAC;AAExDhD,GAAG,CAAC4C,GAAG,CAAC,sBAAsB,EAC9BjD,QAAQ,CAACoD,YAAY,CAAC,QAAQ,EAAE;EAAEE,eAAe,EAAE;AAAS,CAAC,CAAC,EAC9D,UAASJ,GAAG,EAAEtE,GAAG,EAAE;EACjB;EACAA,GAAG,CAAC2E,QAAQ,CAAC,UAAU,CAAC;AAC1B,CAAC,CAAC;AAEJlD,GAAG,CAAC4C,GAAG,CAAC,QAAQ,EAAE,UAASC,GAAG,EAACtE,GAAG,EAAC;EAC/BA,GAAG,CAACuE,MAAM,CAAC,OAAO,CAAC;AACrB,CAAC,CAAC;AAEF9C,GAAG,CAAC4C,GAAG,CAAC,WAAW,EAAE,UAASC,GAAG,EAACtE,GAAG,EAAC;EACpCA,GAAG,CAACuE,MAAM,CAAC,UAAU,CAAC;AACxB,CAAC,CAAC;AAEF9C,GAAG,CAAC4C,GAAG,CAAC,UAAU,EAAE,UAASC,GAAG,EAACtE,GAAG,EAAC;EACnC,IAAIsE,GAAG,CAACM,eAAe,EAAE,EAAC;IACxB5E,GAAG,CAACuE,MAAM,CAAC,SAAS,CAAC;EACvB,CAAC,MAAM;IACLvE,GAAG,CAAC2E,QAAQ,CAAC,QAAQ,CAAC;EACxB;AACF,CAAC,CAAC;AAEFlD,GAAG,CAAC4C,GAAG,CAAC,SAAS,EAAE,UAASC,GAAG,EAACtE,GAAG,EAAC;EAClCsE,GAAG,CAACO,MAAM,CAAC,UAAST,GAAG,EAAC;IACtB,IAAGA,GAAG,EAAC;MACLF,OAAO,CAACC,GAAG,CAACC,GAAG,CAAC;IAClB,CAAC,MAAM;MACLpE,GAAG,CAAC2E,QAAQ,CAAC,GAAG,CAAC;IACnB;EACF,CAAC,CAAC;AAEJ,CAAC,CAAC;AAEFlD,GAAG,CAACqD,IAAI,CAAC,WAAW,EAAE,UAASR,GAAG,EAACtE,GAAG,EAAC;EAErC+C,IAAI,CAACgC,QAAQ,CAAC;IAACzB,QAAQ,EAACgB,GAAG,CAACU,IAAI,CAAC1B;EAAQ,CAAC,EAAEgB,GAAG,CAACU,IAAI,CAACpC,QAAQ,EAAE,UAASwB,GAAG,EAACjB,IAAI,EAAC;IAC9E,IAAGiB,GAAG,EAAC;MACNF,OAAO,CAACC,GAAG,CAACC,GAAG,CAAC;MAChBpE,GAAG,CAAC2E,QAAQ,CAAC,WAAW,CAAC;IAC1B,CAAC,MAAM;MACNvD,QAAQ,CAACoD,YAAY,CAAC,OAAO,CAAC,CAACF,GAAG,EAACtE,GAAG,EAAE,YAAU;QAC9CA,GAAG,CAAC2E,QAAQ,CAAC,UAAU,CAAC;MAC5B,CAAC,CAAC;IACH;EACH,CAAC,CAAC;AAEJ,CAAC,CAAC;AAGFlD,GAAG,CAACqD,IAAI,CAAC,QAAQ,EAAE,UAASR,GAAG,EAACtE,GAAG,EAAC;EAElC,MAAMmD,IAAI,GAAE,IAAIJ,IAAI,CAAC;IACpBO,QAAQ,EAAEgB,GAAG,CAACU,IAAI,CAAC1B,QAAQ;IAC1BV,QAAQ,EAAE0B,GAAG,CAACU,IAAI,CAACpC;EACrB,CAAC,CAAC;EAEF0B,GAAG,CAACW,KAAK,CAAC9B,IAAI,EAAE,UAASiB,GAAG,EAAE;IAC3B,IAAGA,GAAG,EAAC;MACNF,OAAO,CAACC,GAAG,CAACC,GAAG,CAAC;IACjB,CAAC,MAAM;MACNhD,QAAQ,CAACoD,YAAY,CAAC,OAAO,CAAC,CAACF,GAAG,EAAEtE,GAAG,EAAE,YAAU;QACjDA,GAAG,CAAC2E,QAAQ,CAAC,UAAU,CAAC;MAC1B,CAAC,CAAC;IACH;EACH,CAAC,CAAC;AAEJ,CAAC,CAAC;AAIJlD,GAAG,CAACyD,MAAM,CAAC,IAAI,EAAE,YAAU;EAC3BhB,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;AAC1C,CAAC,CAAC;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}